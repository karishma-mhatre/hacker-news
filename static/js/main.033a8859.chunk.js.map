{"version":3,"sources":["actions/index.js","helpers/utils.js","reducers/articleList.js","components/Search/Search.jsx","components/Article/Article.jsx","helpers/constants.js","components/Sort/Sort.jsx","components/ArticleList/ArticleList.jsx","components/Header/Header.jsx","App.js","serviceWorker.js","index.js"],"names":["sortArticles","sortOption","type","getArticleDetails","articleId","a","fetch","response","json","articleDetails","articles","sort","articleA","articleB","score","time","articleStore","isLoadingArticles","rootReducer","combineReducers","articleList","state","action","searchString","allArticles","JSON","parse","localStorage","getItem","filteredArticles","filter","article","title","includes","sortedArticles","Object","assign","connect","props","className","onChange","e","preventDefault","dispatch","target","value","placeholder","Article","created_at","class","Date","toLocaleString","href","url","sortOptions","Sort","sortArticless","this","defaultValue","map","option","key","React","Component","ArticleList","topArticleIds","detailsPromise","id","Promise","all","setItem","stringify","console","log","isLoading","Header","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","reducer","applyMiddleware","thunk","App","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.033a8859.chunk.js","sourcesContent":["export const REQUEST_ARTICLES = \"REQUEST_ARTICLES\";\nexport const RECEIVE_ARTICLES = \"RECEIVE_ARTICLES\";\nexport const SEARCH_ARTICLES = \"SEARCH_ARTICLES\";\nexport const SORT_ARTICLES = \"SORT_ARTICLES\";\n\nexport const requestTopArticles= () => ({\n    type: REQUEST_ARTICLES\n});\n\nexport const receiveTopArticles= (articles) => ({\n    type: RECEIVE_ARTICLES,\n    articles\n});\n\nexport const searchArticles = (searchString) => ({\n    type: SEARCH_ARTICLES,\n    searchString\n})\n\nexport const sortArticles = (sortOption) => ({\n    type: SORT_ARTICLES,\n    sortOption\n})\n\nexport const fetchTopArticles = () => async (dispatch) => {\n    dispatch(requestTopArticles());\n    const response = await fetch(\"https://hacker-news.firebaseio.com/v0/topstories.json?print=pretty\")\n    const topArticleIds = await response.json();\n    const detailsPromise = topArticleIds.map((id) => {\n        return getArticleDetails(id);\n    })\n\n    const articleDetails = await Promise.all(detailsPromise);\n    localStorage.setItem(\"articles\", JSON.stringify(articleDetails));\n    dispatch(receiveTopArticles(articleDetails))\n    console.log(articleDetails)\n}\n\nconst getArticleDetails = async (articleId) => {\n    const response = await fetch(`https://hacker-news.firebaseio.com/v0/item/${articleId}.json?print=pretty`);\n    const articleDetails = await response.json();\n    return articleDetails\n}","export const sortArticles = (articles, sortOption) => {\n    switch(sortOption) {\n        case \"Score - Low to High\":\n            articles.sort((articleA, articleB) => articleA.score - articleB.score)\n            break;\n        case \"Score - High to Low\":\n            articles.sort((articleA, articleB) => articleB.score - articleA.score);\n            break;\n        case \"Created At - Old to New\":\n            articles.sort((articleA, articleB) => articleA.time - articleB.time);\n            break;\n        case \"Created At - New to Old\":\n            articles.sort((articleA, articleB) => articleB.time - articleA.time);\n            break;\n        default: \n            break;\n    }\n    return articles;\n}","import  { REQUEST_ARTICLES, RECEIVE_ARTICLES, SEARCH_ARTICLES, SORT_ARTICLES } from '../actions';\nimport { sortArticles } from '../helpers/utils'\n\nimport { combineReducers } from 'redux';\n\nlet articleStore = {\n    isLoadingArticles: false,\n    sortOption: \"Score - High to Low\",\n    articles: []\n}\n\nconst articleList = (state = articleStore, action) => {\n    switch (action.type) {\n        case REQUEST_ARTICLES:\n            return {\n                ...state,\n                isLoadingArticles: true\n            }\n        case RECEIVE_ARTICLES:\n            return {\n                ...state,\n                isLoadingArticles: false,\n                articles: sortArticles(action.articles, state.sortOption)\n            }\n        case SEARCH_ARTICLES:\n            const searchString = action.searchString;\n            const allArticles = JSON.parse(localStorage.getItem(\"articles\"));\n            if (!searchString || searchString === \"\") {\n                return {\n                    ...state,\n                    articles: sortArticles(allArticles, state.sortOption)\n                }\n            } else {\n                const filteredArticles = allArticles.filter((article) => article.title.includes(searchString));\n                return {\n                    ...state,\n                    articles: filteredArticles\n                }\n            }\n        case SORT_ARTICLES:\n            const sortOption = action.sortOption;\n            let sortedArticles = Object.assign(state.articles);\n            return {\n                ...state,\n                sortOption,\n                articles: sortArticles(sortedArticles, sortOption)\n            }\n\n        default:\n            return state;\n    }\n}\n\nconst rootReducer = combineReducers({articleList});\n\nexport default rootReducer;","import React from \"react\";\nimport { searchArticles } from '../../actions';\nimport  { connect } from \"react-redux\";\nimport './search.css';\n\nconst Search = (props) => {\n    const search = (e) => {\n        e.preventDefault();\n        props.dispatch(searchArticles(e.target.value));\n    }\n    return (\n        <div className=\"search-bar\">\n            <input onChange={search} placeholder=\"Search articles\"/>\n            <i className=\"fa fa-search\"></i>\n        </div>\n    )\n}\n\nexport default connect()(Search);","import React from 'react';\nimport './article.css';\n\nconst Article = (props) => {\n    const { article } = props;\n    const { title, score, time: created_at } = article;\n    const formatDate = (date) => {\n        const dateObj = new Date(date * 1000);\n        return dateObj.toLocaleString();\n    }\n    return (\n        <div class=\"article\" >\n            <div className=\"article-date\">{formatDate(created_at)}</div>\n            <a href={article.url} target=\"__blank\" className=\"article-title\">{title}</a>\n            <div class=\"score\"><i className=\"fa fa-heart\"/>{score}</div>\n        </div>\n    );\n}\n\nexport default Article;","export const sortOptions = [\n    \"Score - Low to High\",\n    \"Score - High to Low\",\n    \"Created At - Old to New\",\n    \"Created At - New to Old\"\n];","import React from \"react\";\nimport { sortArticles } from '../../actions';\nimport  { connect } from \"react-redux\";\nimport { sortOptions } from '../../helpers/constants';\nimport './sort.css';\n\nclass Sort extends React.Component {\n    sortArticless = (e) => {\n        e.preventDefault();\n        this.props.dispatch(sortArticles(e.target.value));\n    }\n\n    render () {\n        return (\n            <div className=\"sort\">\n                <label>\n                    Sort By <i className=\"fa fa-sort-amount-desc\"/>\n                </label>\n                <div className=\"select\">\n                    <select onChange={this.sortArticless} defaultValue={this.props.sortOption}>\n                        {\n                            sortOptions.map(option => <option key={option} value={option}>{\n                                option\n                            }</option>)\n                        }\n                    </select>\n                </div>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    sortOption: state.articleList.sortOption\n})\n\nexport default connect(mapStateToProps)(Sort);","import React from 'react';\nimport { fetchTopArticles, sortArticles } from '../../actions';\nimport  { connect } from \"react-redux\";\nimport Search from '../Search/Search';\nimport Article from '../Article/Article';\nimport Sort from '../Sort/Sort';\nimport './asrticle-list.css';\n\nclass ArticleList extends React.Component {\n    componentDidMount () {\n        this.props.dispatch(fetchTopArticles());\n    }\n\n    sortArticles = (e) => {\n        this.props.dispatch(sortArticles(e.target.value));\n    }\n\n    render () {\n        const { isLoading, articles } = this.props;\n        return (\n            <div className=\"article-list\">\n                {\n                    !isLoading  && <div className=\"tool-bar\">\n                        <Search />\n                        <Sort />\n                    </div>\n                }\n                {\n                    !isLoading && articles ?\n                        articles.map(article => {\n                            return <Article key={article.id} article={article} />\n                        }) : <div className=\"loader\"></div>\n                }\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    articles: state.articleList.articles,\n    isLoading: state.articleList.isLoadingArticles,\n    sortOption: state.articleList.sortOption\n});\n\nexport default connect(mapStateToProps)(ArticleList);","import React from 'react';\nimport './header.css';\n\nconst Header = () => {\n    return <div className=\"header\">\n        Hacker News Top stories\n    </div>\n}\n\nexport default Header;","import React from 'react';\nimport './App.css';\nimport reducer from './reducers/articleList'\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\nimport ArticleList from './components/ArticleList/ArticleList';\nimport {Provider} from 'react-redux';\nimport Header from './components/Header/Header'\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst store = createStore(reducer, composeEnhancers(applyMiddleware(thunk)));\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <div className=\"app\">\n        <Header />\n        <ArticleList />\n      </div>\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}